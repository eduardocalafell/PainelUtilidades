name: Build and Deploy ASP.NET Core App to Azure Web App - m8-core-api

env:
  AZURE_WEBAPP_NAME: "m8-core-api"  # Nome do seu Web App no Azure
  AZURE_WEBAPP_PACKAGE_PATH: "."  # Caminho do pacote para publicação
  DOTNET_VERSION: "8"  # Versão do .NET Core

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          include-prerelease: true

      - name: Configure dependency cache for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Deploy a PostgreSQL database on Azure (optional)
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7
          # Para configurar o deploy do PostgreSQL, consulte a documentação

      - name: Update database structure
        run: |
          dotnet tool install --global dotnet-ef --version 7.0.4
          # Descomente e ajuste a linha abaixo se for necessário atualizar o banco de dados
          # dotnet ef database update -p src/api.csproj

      - name: Run automated tests
        run: dotnet test

      - name: Build the project in Release configuration
        run: dotnet build --configuration Release --no-incremental -p:TreatWarningsAsErrors=false

      - name: Publish the project
        run: dotnet publish -c Release -o ${{ env.DOTNET_ROOT }}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{ env.DOTNET_ROOT }}/myapp

  deploy:
    name: Deploy to Azure
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_71B7AC46F1F74251B7675038D4F517F3 }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
